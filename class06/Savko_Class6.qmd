---
title: "Class 06: R Functions"
author: "Clarissa Savko (PID: A69028482)"
format: pdf
---

## All about functions in R

Every function in R has at least 3 things:
- name (you pick it)
- arguments (the input(s) to your function) and
- the body

Today we will write a function to grade a class of student assignment scores (homework)
First we will work with a simplified vector input where we know what the answer should be

# Example input vectors to start with

```{r}
student1 <- c(100, 100, 100, 100, 100, 100, 100, 90)
student2 <- c(100, NA, 90, 90, 90, 90, 97, 80)
student3 <- c(90, NA, NA, NA, NA, NA, NA, NA)

```
```{r}
mean(student1)

```
How can we drop the lowest score?
```{r}
min(student1)
```

Let's try the function `which.min`
```{r}
which.min(student1)
```
Alternatively... this will give the score in the position that `which.min()` returned.
```{r}
student1[8]
```
This will return everything besides the score in the position of the minimum.
```{r}
student1[-8]
```


```{r}
mean(student1[-which.min(student1)])
```
Will this work for student 2?
```{r}
mean(student2[-which.min(student2)])
```

```{r}
x <- student1
mean(x[-which.min(x)])
```
```{r}
student3
mean(student3, na.rm=TRUE)
```
We can mask the NA or change them to 0. We can use the `is.na()` function to find where the missing homeworks are in the input vector.

```{r}
x <- student2
is.na(student2)
```
```{r}
x[ is.na(x) ] <- 0
x
```
```{r}
#Mask NA to zero
x <- student3
x[is.na(x) ] <- 0
#Find the mean dropping the lowest score.
mean(x[-which.min(x)])
```
Turn this into a function.

```{r}
grade <- function(x){
  x[is.na(x) ] <- 0
  mean(x[-which.min(x)])}
```
```{r}
grade(student2)
```
Q1 Write a function grade() to determine an overall grade from a vector of student homework
assignment scores dropping the lowest single score. If a student misses a homework (i.e. has an
NA value) this can be used as a score to be potentially dropped. Your final function should be
adquately explained with code comments and be able to work on an example class gradebook
such as this one in CSV format: “https://tinyurl.com/gradeinput” [3pts]

I need to read the gradebook csv file
```{r}
gradebook <- read.csv("https://tinyurl.com/gradeinput", row.names=1)
```

A very useful function we are being forced to use is the `apply()` function. How can we use it for our `grade()` function and apply it over the full grade book?

```{r}
ans <- apply(gradebook, 1, grade)
ans
```
```{r}
which.max(ans)
```
Student 18 is the top scoring student.

```{r}
which.min(apply(gradebook, 2, mean, na.rm= TRUE))
```
Let's mask the NA values to 0. 
```{r}
mask <- gradebook
mask[ is.na(mask) ] <- 0
mask
```
```{r}
apply(mask, 2, mean)
```

```{r}
which.min(apply(mask, 2, mean))
```

```{r}
which.min(apply(mask, 2, mean))
```
HW 2 was the toughest for the students.

Q4 Optional Extension: From your analysis of the gradebook, which homework was most
predictive of overall score (i.e. highest correlation with average grade score)? [1pt]

```{r}
cor(mask$hw2, ans)
```
```{r}
cor(mask$hw5, ans)
```
```{r}
apply(mask, 2, cor, y=ans)
```
HW5 is most predictive of overall scores because it has the highest correlation value.